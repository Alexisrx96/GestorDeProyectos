/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestordeproyectos.view.jefedesarrollo;

import gestordeproyectos.dao.CasoDao;
import gestordeproyectos.dao.EmpleadoDao;
import gestordeproyectos.dao.SolicitudDao;
import gestordeproyectos.dto.CasoDto;
import gestordeproyectos.dto.EmpleadoDto;
import gestordeproyectos.dto.EstadoCasoDto;
import gestordeproyectos.dto.EstadoEmpleadoDto;
import gestordeproyectos.dto.EstadoSolicitudDto;
import gestordeproyectos.dto.RolDto;
import gestordeproyectos.dto.SolicitudDto;
import gestordeproyectos.util.JTextFieldLimit;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Irvin
 */
public class AprobarSolicitud extends javax.swing.JInternalFrame {

    /**
     * Creates new form ResponderSolicitud
     */
    public static boolean isOpen = false;

    private final SolicitudDto SOLICITUD;
    private final CasoDao CASO_DAO;
    private final EmpleadoDao EMPLEADO_DAO;
    private final SolicitudDao SOLICITUD_DAO;
    private final EmpleadoDto JEFE;
    private final List<EmpleadoDto> PROBADORES;
    private final List<EmpleadoDto> PROGRAMADORES;
    private final Runnable REFRESH_TABLE;

    public AprobarSolicitud(SolicitudDto solicitud, EmpleadoDto empleado, Runnable refreshTable) {
        initComponents();
        title = "Aprobar solicitud número " + solicitud.getIdSolicitud();
        isOpen = true;
        SOLICITUD = solicitud;
        CASO_DAO = new CasoDao();
        SOLICITUD_DAO = new SolicitudDao();
        EMPLEADO_DAO =new EmpleadoDao();
        JEFE = empleado;
        PROBADORES = new LinkedList<>();
        PROGRAMADORES = new LinkedList<>();
        EMPLEADO_DAO.list().forEach(e -> {
            if (e.getIdDepartamento() != null
                    && e.getIdEstadoEmpleado() == EstadoEmpleadoDto.DISPONIBLE) {

                if (e.getIdDepartamento().equals(JEFE.getIdDepartamento())) {
                    if (e.getIdRol() == RolDto.EMPLEADO) {
                        PROBADORES.add(e);
                    }
                    if (e.getIdRol() == RolDto.PROGRAMADOR) {
                        PROGRAMADORES.add(e);
                    }
                }
            }
        });
        //Limita la cantidad de caracteres que se puenen ingresar
        txtRespuesta.setDocument(new JTextFieldLimit(2184));
        cmbProbador.removeAllItems();
        PROBADORES.forEach(e -> cmbProbador.addItem(e.getNombreEmpleado()));

        cmbProgramador.removeAllItems();
        PROGRAMADORES.forEach(e -> cmbProgramador.addItem(e.getNombreEmpleado()));
        REFRESH_TABLE = refreshTable;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEnviar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblRespuesta = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtRespuesta = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbProgramador = new javax.swing.JComboBox<>();
        cmbProbador = new javax.swing.JComboBox<>();
        jdFechaLimite = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();

        setClosable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        btnEnviar.setText("Enviar");
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Respuesta"));
        jPanel1.setPreferredSize(new java.awt.Dimension(350, 350));

        lblRespuesta.setText("Requerimentos");

        txtRespuesta.setColumns(20);
        txtRespuesta.setRows(5);
        jScrollPane2.setViewportView(txtRespuesta);

        jLabel1.setText("Programador");

        jLabel2.setText("Probador");

        cmbProgramador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbProbador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jdFechaLimite.setDateFormatString("dd/MM/yyyy");
        jdFechaLimite.setMinSelectableDate(new java.util.Date());

        jLabel3.setText("Fecha límite");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRespuesta)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbProgramador, 0, 175, Short.MAX_VALUE)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(cmbProbador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jdFechaLimite, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmbProbador, cmbProgramador});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbProgramador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbProbador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jdFechaLimite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblRespuesta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnEnviar)
                        .addGap(18, 18, 18)
                        .addComponent(btnLimpiar)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancelar, btnEnviar, btnLimpiar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnCancelar)
                    .addComponent(btnLimpiar)
                    .addComponent(btnEnviar))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        isOpen = false;
    }//GEN-LAST:event_formInternalFrameClosing

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        // TODO add your handling code here:

        if (cmbProgramador.getSelectedIndex() <= -1) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Compruebe que hayan programadores disponibles.",
                    "Programador no seleccionado",
                    JOptionPane.WARNING_MESSAGE
            );
        } else if (cmbProbador.getSelectedIndex() <= -1) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Compruebe que hayan empleados disponibles.",
                    "Probador no seleccionado",
                    JOptionPane.WARNING_MESSAGE
            );
        } else if (jdFechaLimite.getDate() == null) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Seleccione una fecha de entrega.",
                    "Fecha no seleccionada",
                    JOptionPane.WARNING_MESSAGE
            );
        } else if (txtRespuesta.getText().isBlank()) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Debes escribir los requerimentos del caso.",
                    "Requerimentos vacíos",
                    JOptionPane.WARNING_MESSAGE
            );
        } else {
            EmpleadoDto programador = PROGRAMADORES.get(cmbProgramador.getSelectedIndex());
            EmpleadoDto probador = PROBADORES.get(cmbProbador.getSelectedIndex());
            CasoDto caso = new CasoDto(
                    SOLICITUD.getIdSolicitud(),
                    programador.getIdEmpleado(),
                    probador.getIdEmpleado(),
                    EstadoCasoDto.DESARROLLO,
                    new Date(),
                    jdFechaLimite.getDate(),
                    txtRespuesta.getText()
            );
            probador.setIdEstadoEmpleado(EstadoEmpleadoDto.OCUPADO);
            programador.setIdEstadoEmpleado(EstadoEmpleadoDto.OCUPADO);
            EMPLEADO_DAO.update(programador);
            EMPLEADO_DAO.update(probador);
            SOLICITUD.setIdEstadoSolicitud(EstadoSolicitudDto.APROBADA);
            CASO_DAO.insert(caso);
            SOLICITUD_DAO.update(SOLICITUD);
            JOptionPane.showMessageDialog(
                    rootPane,
                    "El caso ha sido creado correctamente",
                    "Solicitud aprobada",
                    JOptionPane.INFORMATION_MESSAGE
            );
            REFRESH_TABLE.run();
            isOpen = false;
            dispose();
        }

    }//GEN-LAST:event_btnEnviarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        isOpen = false;
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        if (cmbProbador.getSelectedIndex() > -1) {
            cmbProbador.setSelectedIndex(0);
        }
        if (cmbProgramador.getSelectedIndex() > -1) {
            cmbProgramador.setSelectedIndex(0);
        }
        jdFechaLimite.setDate(null);
        txtRespuesta.setText("");
    }//GEN-LAST:event_btnLimpiarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEnviar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox<String> cmbProbador;
    private javax.swing.JComboBox<String> cmbProgramador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser jdFechaLimite;
    private javax.swing.JLabel lblRespuesta;
    private javax.swing.JTextArea txtRespuesta;
    // End of variables declaration//GEN-END:variables
}
